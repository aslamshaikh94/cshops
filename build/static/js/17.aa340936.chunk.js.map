{"version":3,"sources":["admin/components/Hocpanel.js","components/Contactinfo.js","admin/myprofile/Myprofile.js"],"names":["Hocpanel","HocComponent","props","className","memo","data","fname","phone","email","address","state","city","pincode","country","Fragment","onClick","actionbtn","Contactinfoform","lazy","useContext","AppContext","dispatch","useState","contact","setContact","cInfo","setCinfo","cForm","setCForm","formValidation","test","type","payload","getContactInfo","Axios","get","then","res","useEffect","contactInfo","infodata","put","id","post","e"],"mappings":"sGAAA,oBAUeA,IARC,SAACC,GAChB,OAAO,SAACC,GAAD,OACL,yBAAKC,UAAU,cACd,kBAACF,EAAiBC,O,iCCLtB,2BAwBeE,0BAtBG,SAACF,GAAS,IAAD,EAC4CA,EAAMG,KAArEC,EADmB,EACnBA,MAAOC,EADY,EACZA,MAAOC,EADK,EACLA,MAAOC,EADF,EACEA,QAASC,EADX,EACWA,MAAOC,EADlB,EACkBA,KAAMC,EADxB,EACwBA,QAASC,EADjC,EACiCA,QAE3D,OACE,kBAAC,IAAMC,SAAP,KACC,yBAAKX,UAAU,kCACd,mDACC,4BAAQA,UAAU,wBAAwBY,QAASb,EAAMc,WACxD,uBAAGb,UAAU,eADd,UAIF,uBAAGA,UAAU,OAAb,UAA2BG,GAAc,MACzC,uBAAGH,UAAU,OAAb,WAA4BI,GAAc,MAC1C,uBAAGJ,UAAU,OAAb,WAA4BK,GAAc,MAC1C,uBAAGL,UAAU,OAAb,sBAEMM,EAFN,aAEkBE,EAFlB,aAE2BD,EAF3B,aAEqCE,EAFrC,aAEiDC,S,qGCZ/CI,EAAkBC,gBAAK,kBAAK,uDAwHnBlB,uBAtHC,WAAK,IAAD,EACMmB,qBAAWC,KAA7Bf,EADY,EACZA,KAAMgB,EADM,EACNA,SADM,EAEWC,qBAFX,mBAEZC,EAFY,KAEHC,EAFG,OAGOF,qBAHP,mBAGZG,EAHY,KAGLC,EAHK,OAIOJ,oBAAS,GAJhB,mBAIZK,EAJY,KAILC,EAJK,KAcnB,SAASC,IAGR,OAAIN,EAAQjB,MADE,WAKGwB,KAAKP,EAAQhB,OANb,gDAUGuB,KAAKP,EAAQf,OAI7Be,EAAQd,QAIHc,EAAQV,QAIRU,EAAQb,MAIRa,EAAQZ,OAIRY,EAAQX,UAChBS,EAAS,CAACU,KAAK,cAAeC,QAAQ,0BAC/B,IALPX,EAAS,CAACU,KAAK,cAAeC,QAAQ,wBAC/B,IALPX,EAAS,CAACU,KAAK,cAAeC,QAAQ,yBAC/B,IALPX,EAAS,CAACU,KAAK,cAAeC,QAAQ,2BAC/B,IALPX,EAAS,CAACU,KAAK,cAAeC,QAAQ,0BAC/B,IALPX,EAAS,CAACU,KAAK,cAAeC,QAAQ,wBAC/B,IALPX,EAAS,CAACU,KAAK,cAAeC,QAAQ,8BAC/B,IALPX,EAAS,CAACU,KAAK,cAAeC,QAAQ,4BAC/B,GAwDT,SAASC,IACRC,IAAMC,IAAN,2BAAqCC,MAAK,SAACC,GACvCA,EAAIhC,MACNgB,EAAS,CAACU,KAAK,eAAgBC,QAAQK,EAAIhC,KAAK,QAWnD,OAnFAiC,qBAAU,WACTL,MACC,IAEFK,qBAAU,WACNjC,EAAKkC,aAAab,EAASrB,EAAKkC,eAClC,CAAClC,EAAKkC,cA8EN,yBAAKpC,UAAU,eAEL,IAARsB,EACC,yBAAKtB,UAAU,OACd,yBAAKA,UAAU,QACd,yBAAKA,UAAU,aACbwB,EACA,6BACC,kBAACV,EAAD,CAAiBuB,SA5C3B,SAAwBnC,GACvBmB,EAAWnB,IA2CyCA,KAAMoB,IACjD,yBAAKtB,UAAU,8BAEbE,EAAKkC,YACJ,4BAAQpC,UAAU,wBAAwBY,QArCvD,WACgBc,KAEdK,IAAMO,IAAN,kCAAqCpC,EAAKkC,YAAYG,IAAMnB,GAASa,MAAK,SAACC,GAC1EJ,IACAZ,EAAS,CAACU,KAAK,gBAAiBC,QAAQ,0CAgC9B,UACC,4BAAQ7B,UAAU,wBAAwBY,QA9CxD,WACgBc,KAEdK,IAAMS,KAAN,0BAAsCpB,GAASa,MAAK,SAACC,GACpDJ,SA0CW,UAIHR,EAAO,kBAAC,UAAD,CAAapB,KAAMoB,EAAOT,UAAW,SAAA4B,GArBtDhB,GAAS,MAqBiE,QAKtE","file":"static/js/17.aa340936.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Hocpanel =(HocComponent)=>{\r\n\treturn (props)=>(\r\n\t\t\t<div className=\"adminpanel\">\t\t\t\t\t\t\t\t\r\n\t\t\t\t<HocComponent {...props} />\r\n\t\t\t</div>\t\t\r\n\t)\t\t\r\n}\r\n\r\nexport default Hocpanel","import React, {memo} from 'react';\r\n\r\nconst Contactinfo=(props)=>{\r\n\tconst {fname, phone, email, address, state, city, pincode, country} = props.data;\r\n\t\r\n\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<div className=\"d-flex justify-content-between\">\r\n\t\t\t\t\t<h6>Contact Information</h6> \r\n\t\t\t\t\t\t<button className=\"btn btn-sm btn_orange\" onClick={props.actionbtn}>\r\n\t\t\t\t\t\t\t<i className=\"fal fa-pen\"></i> Edit\r\n\t\t\t\t\t\t</button> \r\n\t\t\t\t</div>\t\t\t\t\r\n\t\t\t\t<p className=\"m-0\">Name:  {fname? fname :null}</p>\r\n\t\t\t\t<p className=\"m-0\">Phone:  {phone? phone :null}</p>\r\n\t\t\t\t<p className=\"m-0\">Email:  {email? email :null}</p>\r\n\t\t\t\t<p className=\"m-0\">\r\n\t\t\t\tAddress: \r\n\t\t\t\t\t{` ${address}, ${city}, ${state}, ${pincode}, ${country}` } \t\t\t\t\r\n\t\t\t\t</p>\r\n\t\t\t</React.Fragment>\r\n\t\t)\r\n}\r\n\r\nexport default memo(Contactinfo)\r\n\r\n\r\n","import React, {useState, useEffect, useContext, lazy} from 'react';\r\nimport {Axios} from '../../config/apis';\r\nimport {AppContext} from '../../App';\r\nimport Hocpanel from '../components/Hocpanel';\r\nimport Contactinfo from '../../components/Contactinfo';\r\n\r\nconst Contactinfoform = lazy(()=> import('../../components/Contactinfoform'));\r\n\r\nconst Myprofile=()=>{\r\n\tconst {data, dispatch} = useContext(AppContext)\r\n\tconst [contact, setContact] = useState();\r\n\tconst [cInfo, setCinfo] = useState();\r\n\tconst [cForm, setCForm] = useState(false);\r\n\t\r\n\tuseEffect(()=>{\r\n\t\tgetContactInfo()\r\n\t},[])\r\n\r\n\tuseEffect(()=>{\r\n\t\tif(data.contactInfo) setCinfo(data.contactInfo)\r\n\t},[data.contactInfo])\r\n\t\r\n\tfunction formValidation(){\t\t\r\n\t\tlet mailformat = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\r\n\t\tlet phoneno = /^\\d{10}$/;\r\n\t\tif(!contact.fname){\t\t\t\r\n\t\t\tdispatch({type:'FETCH_ERROR', payload:'Please enter full name'})\r\n\t\t\treturn false\r\n\t\t}\r\n\t\telse if(!phoneno.test(contact.phone)){\t\t\t\r\n\t\t\tdispatch({type:'FETCH_ERROR', payload:'Not a valid Phone Number'})\r\n\t\t\treturn false\r\n\t\t}\t\t\r\n\t\telse if(!mailformat.test(contact.email)){\t\t\t\r\n\t\t\tdispatch({type:'FETCH_ERROR', payload:'Please enter email'})\r\n\t\t\treturn false\r\n\t\t}\r\n\t\tif(!contact.address){\r\n\t\t\tdispatch({type:'FETCH_ERROR', payload:'Please enter address'})\t\t\t\r\n\t\t\treturn false\r\n\t\t}\r\n\t\telse if(!contact.country){\t\t\t\r\n\t\t\tdispatch({type:'FETCH_ERROR', payload:'Please select country'})\r\n\t\t\treturn false\r\n\t\t}\r\n\t\telse if(!contact.state){\t\t\t\r\n\t\t\tdispatch({type:'FETCH_ERROR', payload:'Please select state'})\r\n\t\t\treturn false\r\n\t\t}\r\n\t\telse if(!contact.city){\t\t\t\r\n\t\t\tdispatch({type:'FETCH_ERROR', payload:'Please select city'})\r\n\t\t\treturn false\r\n\t\t}\t\t\t\t\t\t\r\n\t\telse if(!contact.pincode){\r\n\t\t\tdispatch({type:'FETCH_ERROR', payload:'Please enter pincode'})\t\t\t\r\n\t\t\treturn false\r\n\t\t}\r\n\t\telse{\r\n\t\t\treturn true\r\n\t\t}\r\n\t}\r\n\r\n\tfunction setContactData(data){\r\n\t\tsetContact(data)\r\n\t}\r\n\tfunction saveContact(){\r\n\t\tlet validate = formValidation()\r\n\t\tif(validate){\r\n\t\t\tAxios.post(`/myprofile/contact_info`, contact).then((res)=>{\r\n\t\t\t\tgetContactInfo()\r\n\t\t\t})\t\t\t\r\n\t\t}\r\n\t}\r\n\tfunction updateContact(){\r\n\t\tlet validate = formValidation()\r\n\t\tif(validate){\r\n\t\t\tAxios.put(`/myprofile/contact_info/${data.contactInfo.id}`, contact).then((res)=>{\r\n\t\t\t\tgetContactInfo()\r\n\t\t\t\tdispatch({type:'FETCH_SUCCESS', payload:'Information updated successfully'})\r\n\t\t\t})\t\t\t\r\n\t\t}\r\n\t}\r\n\t\r\n\tfunction getContactInfo(){\r\n\t\tAxios.get(`/myprofile/contact_info`).then((res)=>{\t\t\t\t\t\r\n\t\t\tif(res.data){\r\n\t\t\t\tdispatch({type:'CONTACT_INFO', payload:res.data[0]})\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\t// setCForm(true)\t\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\tfunction editcInfo(){\r\n\t\tsetCForm(true)\r\n\t}\r\n\t\r\n\treturn (\r\n\t\t\t<div className=\"adminpanel\">\r\n\t\t\t\t{\r\n\t\t\t\t\tcInfo!==false? \r\n\t\t\t\t\t\t<div className=\"p-2\">\r\n\t\t\t\t\t\t\t<div className=\"card\">\r\n\t\t\t\t\t\t\t\t<div className=\"card-body\">\r\n\t\t\t\t\t\t\t\t\t{cForm? \r\n\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t<Contactinfoform infodata={setContactData} data={cInfo}/>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"d-flex justify-content-end\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tdata.contactInfo? \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<button className=\"btn btn-sm btn_orange\" onClick={updateContact}>Update</button> \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t: <button className=\"btn btn-sm btn_orange\" onClick={saveContact}>Save</button> \r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t: cInfo? <Contactinfo data={cInfo} actionbtn={e=>editcInfo()} /> :null\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t:null\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t)\r\n}\r\n\r\nexport default Hocpanel(Myprofile)"],"sourceRoot":""}