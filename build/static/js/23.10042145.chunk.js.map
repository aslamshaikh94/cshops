{"version":3,"sources":["components/Contactinfo.js","admin/myprofile/Myprofile.js","admin/components/Hocpanel.js"],"names":["memo","props","data","fname","phone","email","address","states","cities","pincode","countries","Fragment","className","onClick","actionbtn","Contactinfoform","lazy","Hocpanel","useContext","AppContext","dispatch","useState","contact","setContact","cInfo","setCinfo","cForm","setCForm","addToast","useToasts","errorSetting","appearance","autoDismiss","autoDismissTimeout","formValidation","test","country","state","city","name","getContactInfo","axios","get","API_URL","getToken","then","res","type","payload","useEffect","contactInfo","infodata","put","id","post","e","HocComponent"],"mappings":"sGAAA,2BAwBeA,0BAtBG,SAACC,GAAS,IAAD,EACiDA,EAAMC,KAA1EC,EADmB,EACnBA,MAAOC,EADY,EACZA,MAAOC,EADK,EACLA,MAAOC,EADF,EACEA,QAASC,EADX,EACWA,OAAQC,EADnB,EACmBA,OAAQC,EAD3B,EAC2BA,QAASC,EADpC,EACoCA,UAE9D,OACE,kBAAC,IAAMC,SAAP,KACC,yBAAKC,UAAU,kCACd,mDACC,4BAAQA,UAAU,wBAAwBC,QAASZ,EAAMa,WACxD,uBAAGF,UAAU,eADd,UAIF,uBAAGA,UAAU,OAAb,UAA2BT,GAAc,MACzC,uBAAGS,UAAU,OAAb,WAA4BR,GAAc,MAC1C,uBAAGQ,UAAU,OAAb,WAA4BP,GAAc,MAC1C,uBAAGO,UAAU,OAAb,sBAEMN,EAFN,aAEkBE,EAFlB,aAE6BD,EAF7B,aAEwCE,EAFxC,aAEoDC,S,8HCVlDK,EAAkBC,gBAAK,kBAAK,uDA8HnBC,uBA5HC,WAAK,IAAD,EACMC,qBAAWC,KAA7BjB,EADY,EACZA,KAAMkB,EADM,EACNA,SADM,EAEWC,qBAFX,mBAEZC,EAFY,KAEHC,EAFG,OAGOF,qBAHP,mBAGZG,EAHY,KAGLC,EAHK,OAIOJ,oBAAS,GAJhB,mBAIZK,EAJY,KAILC,EAJK,KAKXC,EAAaC,sBAAbD,SACJE,EAAe,CAAEC,WAAY,QAASC,aAAY,EAAOC,mBAAoB,KAUjF,SAASC,IAGR,OAAIZ,EAAQnB,MADE,WAKGgC,KAAKb,EAAQlB,OANb,gDAUG+B,KAAKb,EAAQjB,OAI7BiB,EAAQhB,QAIHgB,EAAQc,QAIRd,EAAQe,MAIRf,EAAQgB,KAIRhB,EAAQiB,OAIRjB,EAAQb,UAChBmB,EAAS,uBAAwBE,IAC1B,IALPF,EAAS,oBAAqBE,IACvB,IALPF,EAAS,qBAAsBE,IACxB,IALPF,EAAS,sBAAuBE,IACzB,IALPF,EAAS,wBAAyBE,IAC3B,IALPF,EAAS,uBAAwBE,IAC1B,IALPF,EAAS,qBAAsBE,IACxB,IALPF,EAAS,2BAA4BE,IAC9B,IALPF,EAAS,yBAA0BE,IAC5B,GA2DT,SAASU,IACRC,IAAMC,IAAN,UAAaxC,EAAKyC,QAAlB,2BAAoDC,eAAaC,MAAK,SAACC,GACnEA,EAAI5C,MACNkB,EAAS,CAAC2B,KAAK,eAAgBC,QAAQF,EAAI5C,KAAK,QAWnD,OAtFA+C,qBAAU,WACTT,MACC,IAEFS,qBAAU,WACN/C,EAAKgD,aAAazB,EAASvB,EAAKgD,eAClC,CAAChD,EAAKgD,cAiFN,yBAAKtC,UAAU,eAEL,IAARY,EACC,yBAAKZ,UAAU,OACd,yBAAKA,UAAU,QACd,yBAAKA,UAAU,aACbc,EACA,6BACC,kBAACX,EAAD,CAAiBoC,SA3C3B,SAAwBjD,GACvBqB,EAAWrB,IA0CyCA,KAAMsB,IACjD,yBAAKZ,UAAU,8BAEbV,EAAKgD,YACJ,4BAAQtC,UAAU,wBAAwBC,QApCvD,WACgBqB,KAEdO,IAAMW,IAAN,UAAalD,EAAKyC,QAAlB,mCAAoDzC,EAAKgD,YAAYG,IAAM/B,EAASsB,eAAaC,MAAK,SAACC,GACtGN,SAgCU,UACC,4BAAQ5B,UAAU,wBAAwBC,QA7CxD,WACgBqB,KAEdO,IAAMa,KAAN,UAAcpD,EAAKyC,QAAnB,2BAAqDrB,EAASsB,eAAaC,MAAK,SAACC,GAChFN,SAyCW,UAKHhB,EAAO,kBAAC,UAAD,CAAatB,KAAMsB,EAAOV,UAAW,SAAAyC,GAtBtD5B,GAAS,MAsBiE,QAKtE,U,gCChIN,oBAUeV,IARC,SAACuC,GAChB,OAAO,SAACvD,GAAD,OACL,yBAAKW,UAAU,cACd,kBAAC4C,EAAiBvD","file":"static/js/23.10042145.chunk.js","sourcesContent":["import React, {memo} from 'react';\r\n\r\nconst Contactinfo=(props)=>{\r\n\tconst {fname, phone, email, address, states, cities, pincode, countries} = props.data;\r\n\t\r\n\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<div className=\"d-flex justify-content-between\">\r\n\t\t\t\t\t<h6>Contact Information</h6> \r\n\t\t\t\t\t\t<button className=\"btn btn-sm btn_orange\" onClick={props.actionbtn}>\r\n\t\t\t\t\t\t\t<i className=\"fal fa-pen\"></i> Edit\r\n\t\t\t\t\t\t</button> \r\n\t\t\t\t</div>\t\t\t\t\r\n\t\t\t\t<p className=\"m-0\">Name:  {fname? fname :null}</p>\r\n\t\t\t\t<p className=\"m-0\">Phone:  {phone? phone :null}</p>\r\n\t\t\t\t<p className=\"m-0\">Email:  {email? email :null}</p>\r\n\t\t\t\t<p className=\"m-0\">\r\n\t\t\t\tAddress: \r\n\t\t\t\t\t{` ${address}, ${cities}, ${states}, ${pincode}, ${countries}` } \t\t\t\t\r\n\t\t\t\t</p>\r\n\t\t\t</React.Fragment>\r\n\t\t)\r\n}\r\n\r\nexport default memo(Contactinfo)\r\n\r\n\r\n","import React, {useState, useEffect, useContext, lazy} from 'react';\r\nimport axios from 'axios';\r\nimport {AppContext} from '../../App';\r\nimport {getToken} from '../../methods/methods';\r\nimport Hocpanel from '../components/Hocpanel';\r\nimport {useToasts } from 'react-toast-notifications';\r\n\r\nimport Contactinfo from '../../components/Contactinfo';\r\nconst Contactinfoform = lazy(()=> import('../../components/Contactinfoform'));\r\n\r\nconst Myprofile=()=>{\r\n\tconst {data, dispatch} = useContext(AppContext)\r\n\tconst [contact, setContact] = useState();\r\n\tconst [cInfo, setCinfo] = useState();\r\n\tconst [cForm, setCForm] = useState(false);\r\n\tconst { addToast } = useToasts();\t\r\n\tlet errorSetting = { appearance: 'error', autoDismiss:true,  autoDismissTimeout :2000 }\r\n\r\n\tuseEffect(()=>{\r\n\t\tgetContactInfo()\r\n\t},[])\r\n\r\n\tuseEffect(()=>{\r\n\t\tif(data.contactInfo) setCinfo(data.contactInfo)\r\n\t},[data.contactInfo])\r\n\t\r\n\tfunction formValidation(){\t\t\r\n\t\tlet mailformat = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\r\n\t\tlet phoneno = /^\\d{10}$/;\r\n\t\tif(!contact.fname){\r\n\t\t\taddToast('Please enter full name', errorSetting)\r\n\t\t\treturn false\r\n\t\t}\r\n\t\telse if(!phoneno.test(contact.phone)){\r\n\t\t\taddToast('Not a valid Phone Number', errorSetting)\r\n\t\t\treturn false\r\n\t\t}\t\t\r\n\t\telse if(!mailformat.test(contact.email)){\r\n\t\t\taddToast('Please enter email', errorSetting)\r\n\t\t\treturn false\r\n\t\t}\r\n\t\tif(!contact.address){\r\n\t\t\taddToast('Please enter address', errorSetting)\r\n\t\t\treturn false\r\n\t\t}\r\n\t\telse if(!contact.country){\r\n\t\t\taddToast('Please select country', errorSetting)\r\n\t\t\treturn false\r\n\t\t}\r\n\t\telse if(!contact.state){\r\n\t\t\taddToast('Please select state', errorSetting)\r\n\t\t\treturn false\r\n\t\t}\r\n\t\telse if(!contact.city){\r\n\t\t\taddToast('Please select city', errorSetting)\r\n\t\t\treturn false\r\n\t\t}\t\t\r\n\t\telse if(!contact.name){\r\n\t\t\taddToast('Please enter name', errorSetting)\r\n\t\t\treturn false\r\n\t\t}\t\t\r\n\t\telse if(!contact.pincode){\r\n\t\t\taddToast('Please enter pincode', errorSetting)\r\n\t\t\treturn false\r\n\t\t}\r\n\t\telse{\r\n\t\t\treturn true\r\n\t\t}\r\n\t}\r\n\r\n\tfunction setContactData(data){\r\n\t\tsetContact(data)\r\n\t}\r\n\tfunction saveContact(){\r\n\t\tlet validate = formValidation()\r\n\t\tif(validate){\r\n\t\t\taxios.post(`${data.API_URL}/myprofile/contact_info`, contact, getToken() ).then((res)=>{\r\n\t\t\t\tgetContactInfo()\r\n\t\t\t})\t\t\t\r\n\t\t}\r\n\t}\r\n\tfunction updateContact(){\r\n\t\tlet validate = formValidation()\r\n\t\tif(validate){\r\n\t\t\taxios.put(`${data.API_URL}/myprofile/contact_info/${data.contactInfo.id}`, contact, getToken() ).then((res)=>{\r\n\t\t\t\tgetContactInfo()\r\n\t\t\t})\t\t\t\r\n\t\t}\r\n\t}\r\n\t\r\n\tfunction getContactInfo(){\r\n\t\taxios.get(`${data.API_URL}/myprofile/contact_info`, getToken() ).then((res)=>{\t\t\t\t\t\r\n\t\t\tif(res.data){\r\n\t\t\t\tdispatch({type:'CONTACT_INFO', payload:res.data[0]})\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\t// setCForm(true)\t\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\tfunction editcInfo(){\r\n\t\tsetCForm(true)\r\n\t}\r\n\t\r\n\treturn (\r\n\t\t\t<div className=\"adminpanel\">\r\n\t\t\t\t{\r\n\t\t\t\t\tcInfo!==false? \r\n\t\t\t\t\t\t<div className=\"p-2\">\r\n\t\t\t\t\t\t\t<div className=\"card\">\r\n\t\t\t\t\t\t\t\t<div className=\"card-body\">\r\n\t\t\t\t\t\t\t\t\t{cForm? \r\n\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t<Contactinfoform infodata={setContactData} data={cInfo}/>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"d-flex justify-content-end\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tdata.contactInfo? \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<button className=\"btn btn-sm btn_orange\" onClick={updateContact}>Update</button> \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t: <button className=\"btn btn-sm btn_orange\" onClick={saveContact}>Save</button> \r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t: cInfo? <Contactinfo data={cInfo} actionbtn={e=>editcInfo()} /> :null\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t:null\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t)\r\n}\r\n\r\nexport default Hocpanel(Myprofile)","import React from 'react';\r\n\r\nconst Hocpanel =(HocComponent)=>{\r\n\treturn (props)=>(\r\n\t\t\t<div className=\"adminpanel\">\t\t\t\t\t\t\t\t\r\n\t\t\t\t<HocComponent {...props} />\r\n\t\t\t</div>\t\t\r\n\t)\t\t\r\n}\r\n\r\nexport default Hocpanel"],"sourceRoot":""}